# CI-Pipeline.yml
trigger:
  branches:
    include:
      - '*'    # Run on pushes to any branch

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  displayName: 'Checkout repository'

# Install the NuGet tool for package management
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '>=5.0.0'
  displayName: 'Install NuGet Tool'

# Authenticate to Azure Artifacts to access packages from the AutomatedTesting feed
- task: NuGetAuthenticate@0
  displayName: 'Authenticate to Azure Artifacts'

# Install the .NET 6 SDK on the agent
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    includePreviewVersions: false
  displayName: 'Install .NET 6 SDK'

# Restore NuGet packages using DotNetCoreCLI@2 with the nuget.config file for Azure Artifacts
- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    projects: 'Tests/Tests.sln'
    feedsToUse: 'config'
    nugetConfigPath: 'nuget.config'

# Build the solution in Release configuration (skip restore since itâ€™s already done)
- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: 'Tests/Tests.sln'
    arguments: '--configuration Release --no-restore'

# Run tests using DotNetCoreCLI@2 and output the test results in TRX format
- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: 'Tests/Tests.sln'
    arguments: '--configuration Release --no-build --logger "trx;LogFileName=test_results.trx"'

# Publish test results to Azure DevOps for visualization in the build summary
- task: PublishTestResults@2
  displayName: 'Publish test results'
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/test_results.trx'
    mergeTestResults: true
