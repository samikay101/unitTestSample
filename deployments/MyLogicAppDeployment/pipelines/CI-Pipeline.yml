# Trigger the pipeline on changes to the main branch and specific paths.
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'MyLogicApp/**'
      - 'Tests/**'
      - 'deployments/MyLogicAppDeployment/pipelines/CI-Pipeline.yml'

# Use the Ubuntu agent image.
pool:
  vmImage: 'ubuntu-latest'

# Define variables for build configuration and solution file location.
variables:
  buildConfiguration: 'Debug'
  solution: 'Tests/Tests.sln'
  # Pattern for TRX test results generated by dotnet test.
  testResultsFiles: '**/TestResults/*.trx'

# steps:
# # 1. Restore NuGet packages for the solution.
# - task: DotNetCoreCLI@2
#   displayName: 'Restore NuGet packages'
#   inputs:
#     command: 'restore'
#     projects: '$(solution)'
#   # Troubleshooting: Ensure package restore logs indicate no missing dependencies.

# 2. Build the solution in Debug configuration.
- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'
  # Troubleshooting: Check build logs to confirm successful compilation.

# 3. Run unit tests using dotnet test (cross-platform alternative to VSTest@3).
- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: 'test'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --logger "trx;LogFileName=test_results.trx" --collect:"XPlat Code Coverage"'
  # Troubleshooting:
  # - The "--logger" option generates TRX files for test results.
  # - The "--collect" option gathers code coverage data.
  # - If tests do not run or fail unexpectedly, review the verbose output from dotnet test.

# 4. Publish test results so they appear in the Azure DevOps Test Results tab.
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '$(testResultsFiles)'
    mergeTestResults: true
    testRunTitle: 'Unit Test Results'
  # Troubleshooting:
  # - Confirm that TRX files are generated in the expected location.
  # - Check Azure DevOps logs for detailed error messages if test results fail to publish.
